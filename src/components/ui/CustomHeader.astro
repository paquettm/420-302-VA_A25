---
import Search from "@astrojs/starlight/components/Search.astro";
import SiteTitle from "@astrojs/starlight/components/SiteTitle.astro";
import SocialIcons from "@astrojs/starlight/components/SocialIcons.astro";
import ThemeSelect from "./ThemeSelect.astro";
import ProgressScroll from "./ProgressScroll.astro";
import {TextScaler}  from 'astro-nebula-ui';
import {NebulaSlider} from 'astro-nebula-ui';
import { getEntry } from 'astro:content';

// Hide progress scroll on the home page only (works with any base URL)
const baseUrl = import.meta.env.BASE_URL || "/";
const normalizedPath = Astro.url.pathname.endsWith("/")
  ? Astro.url.pathname
  : Astro.url.pathname + "/";
const normalizedBase = baseUrl.endsWith("/") ? baseUrl : baseUrl + "/";
const displayProgressScroll = normalizedPath !== normalizedBase;

// Get page title: try Starlight's entry prop first, then fallback to URL-based lookup.
let pageTitle = "Content Slides";
try {
  // Check if Starlight provides entry prop.
  const { entry } = Astro.props;
  if (entry?.data?.title) {
    pageTitle = entry.data.title;
  } else {
    // Fallback: derive slug from URL pathname.
    const pathname = Astro.url.pathname;
    let slug = pathname.replace(baseUrl, '').replace(/^\//, '').replace(/\/$/, '');

    // Handle root/index pages.
    if (!slug) {
      slug = 'index';
    }

    // Try to get entry from content collection.
    const contentEntry = await getEntry('docs', slug);
    if (contentEntry?.data?.title) {
      pageTitle = contentEntry.data.title;
    }
  }
} catch (error) {
  console.warn('Could not retrieve page title:', error);
}
---

<div class="header sl-flex">
  <div class="title-wrapper sl-flex">
    <SiteTitle />
  </div>
  <div class="sl-flex">
    <Search />
  </div>
  <div class="sl-hidden md:sl-flex right-group">
    <TextScaler/>
    <NebulaSlider title={pageTitle} />
    <div class="sl-flex social-icons">
		<SocialIcons />
    </div>
	<ThemeSelect />
  </div>
</div>
{displayProgressScroll && <ProgressScroll />}

<style>
  .header {
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
    overflow: hidden;
  }

  .right-group,
  .social-icons {
    gap: 1rem;
    align-items: center;
  }

  /* Right-align the social/theme buttons */
  .header > .right-group {
    justify-content: flex-end;
  }

  /* Center the search box */
  .header > .sl-flex:nth-child(2) {
    justify-content: center;
  }
  .social-icons::after {
    content: "";
    height: 2rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  }

  @media (min-width: 50rem) {
    :global(:root[data-has-sidebar]) {
      --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
    }
    :global(:root:not([data-has-toc])) {
      --__toc-width: 0rem;
    }
    .header {
      --__sidebar-width: max(
        0rem,
        var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x)
      );
      --__main-column-fr: calc(
        (
            100% + var(--__sidebar-pad, 0rem) -
              var(--__toc-width, var(--sl-sidebar-width)) -
              (2 * var(--__toc-width, var(--sl-nav-pad-x))) -
              var(--sl-content-inline-start, 0rem) - var(--sl-content-width)
          ) / 2
      );
      display: grid;
      grid-template-columns:
        /* 1 (site title): fixed width for better centering */
        1fr
        /* 2 (search box): fixed width, centered */
        minmax(300px, 600px)
        /* 3 (right items): same width as title for balance */
        1fr;
      align-content: center;
    }
  }
</style>
